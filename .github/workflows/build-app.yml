name: Build App

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: windows-latest
    
    strategy:
      matrix:
        arch: [x64, x86]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up pyenv and install Python for ${{ matrix.arch }}
      shell: pwsh
      run: |
        Invoke-WebRequest -Uri https://pyenv.run | Invoke-Expression
        
        echo "export PYENV_ROOT=$env:USERPROFILE\.pyenv" | Out-File -Append -FilePath $env:GITHUB_ENV
        echo "export PATH=$env:PYENV_ROOT\bin;$env:PATH" | Out-File -Append -FilePath $env:GITHUB_ENV
        echo "export PATH=$env:PYENV_ROOT\shims;$env:PATH" | Out-File -Append -FilePath $env:GITHUB_ENV

        $env:PYENV_ROOT="$env:USERPROFILE\.pyenv"
        $env:PATH="$env:PYENV_ROOT\bin;$env:PATH"
        $env:PATH="$env:PYENV_ROOT\shims;$env:PATH"
        
        if (${{ matrix.arch }} -eq "x64") {
          pyenv install 3.10.0
        } else {
          pyenv install 3.10.0 --32
        }
        pyenv global 3.10.0

    - name: Install PyInstaller
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller

    - name: Build executable with PyInstaller for ${{ matrix.arch }}
      run: |
        pyinstaller --onefile --noconsole --icon=favicon.ico --add-data "favicon.ico;." --name "CPPU-ClickToLogin-${{ matrix.arch }}" CPPU-ClickToLogin.py

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: windows-executables-${{ matrix.arch }}
        path: dist/*

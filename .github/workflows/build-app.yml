name: Build App

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: windows-latest
    
    strategy:
      matrix:
        arch: [x64, x86]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install Python for ${{ matrix.arch }}
      shell: pwsh
      run: |
        if ("${{ matrix.arch }}" -eq "x86") {
          $url = "https://www.python.org/ftp/python/3.10.0/python-3.10.0-embed-win32.zip"
          $zipPath = "$env:USERPROFILE\python-3.10.0-embed-win32.zip"
          Invoke-WebRequest -Uri $url -OutFile $zipPath
          Expand-Archive -Path $zipPath -DestinationPath "$env:USERPROFILE\python-3.10.0"
          
          $env:PATH = "$env:USERPROFILE\python-3.10.0;$env:USERPROFILE\python-3.10.0\Scripts;$env:PATH"
        } else {
          $url = "https://www.python.org/ftp/python/3.10.0/python-3.10.0-embed-amd64.zip"
          $zipPath = "$env:USERPROFILE\python-3.10.0-embed-amd64.zip"
          Invoke-WebRequest -Uri $url -OutFile $zipPath
          Expand-Archive -Path $zipPath -DestinationPath "$env:USERPROFILE\python-3.10.0"
          
          $env:PATH = "$env:USERPROFILE\python-3.10.0;$env:USERPROFILE\python-3.10.0\Scripts;$env:PATH"
        }

    - name: Install PyInstaller
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller

    - name: Build executable with PyInstaller for ${{ matrix.arch }}
      run: |
        pyinstaller --onefile --noconsole --icon=favicon.ico --add-data "favicon.ico;." --name "CPPU-ClickToLogin-${{ matrix.arch }}" CPPU-ClickToLogin.py

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: windows-executables-${{ matrix.arch }}
        path: dist/*
